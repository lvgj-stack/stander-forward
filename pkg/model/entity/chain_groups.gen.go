// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package entity

import (
	"time"

	"gorm.io/gorm"
)

const TableNameChainGroup = "chain_groups"

// ChainGroup mapped from table <chain_groups>
type ChainGroup struct {
	ID             int64          `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt      *time.Time     `gorm:"column:created_at;type:datetime(3)" json:"createdAt"`
	UpdatedAt      *time.Time     `gorm:"column:updated_at;type:datetime(3)" json:"updatedAt"`
	DeletedAt      gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);index:idx_chain_groups_deleted_at,priority:1" json:"deletedAt"`
	ChainID        int64          `gorm:"column:chain_id;type:bigint unsigned;not null" json:"chainId"`
	ChainGroupID   string         `gorm:"column:chain_group_id;type:varchar(255);not null" json:"chainGroupId"`
	ChainGroupName *string        `gorm:"column:chain_group_name;type:varchar(255)" json:"chainGroupName"`
	ChainName      *string        `gorm:"column:chain_name;type:varchar(255)" json:"chainName"`
	Backup         bool           `gorm:"column:backup;type:tinyint" json:"backup"`
	MaxFails       *int32         `gorm:"column:max_fails;type:int unsigned" json:"maxFails"`
	Timeout        *int32         `gorm:"column:timeout;type:int unsigned" json:"timeout"`
	Weight         *int32         `gorm:"column:weight;type:int unsigned" json:"weight"`
	Chain          Chain          `gorm:"foreignKey:ID;references:ChainID" json:"chain"`
}

// TableName ChainGroup's table name
func (*ChainGroup) TableName() string {
	return TableNameChainGroup
}
