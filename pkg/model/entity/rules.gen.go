// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package entity

import (
	"time"

	"gorm.io/gorm"
)

const TableNameRule = "rules"

// Rule mapped from table <rules>
type Rule struct {
	ID         int64          `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt  *time.Time     `gorm:"column:created_at;type:datetime(3)" json:"createdAt"`
	UpdatedAt  *time.Time     `gorm:"column:updated_at;type:datetime(3)" json:"updatedAt"`
	DeletedAt  gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);index:idx_chains_deleted_at,priority:1" json:"deletedAt"`
	RuleName   *string        `gorm:"column:rule_name;type:varchar(255)" json:"ruleName"`
	NodeID     *int64         `gorm:"column:node_id;type:bigint" json:"nodeId"`
	ChainID    *int64         `gorm:"column:chain_id;type:bigint" json:"chainId"`
	ListenPort *int32         `gorm:"column:listen_port;type:int" json:"listenPort"`
	RemoteAddr *string        `gorm:"column:remote_addr;type:varchar(255)" json:"remoteAddr"`
	Protocol   *string        `gorm:"column:protocol;type:varchar(255)" json:"protocol"`
	Traffic    int64          `gorm:"column:traffic;type:bigint;not null;comment:消耗" json:"traffic"` // 消耗
	UserID     *int32         `gorm:"column:user_id;type:int" json:"userId"`
	Node       Node           `gorm:"foreignKey:ID;references:NodeID" json:"node"`
	Chain      Chain          `gorm:"foreignKey:ID;references:ChainID" json:"chain"`
}

// TableName Rule's table name
func (*Rule) TableName() string {
	return TableNameRule
}
