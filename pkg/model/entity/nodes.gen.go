// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package entity

import (
	"time"

	"gorm.io/gorm"
)

const TableNameNode = "nodes"

// Node mapped from table <nodes>
type Node struct {
	ID        int64          `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt *time.Time     `gorm:"column:created_at;type:datetime(3)" json:"createdAt"`
	UpdatedAt *time.Time     `gorm:"column:updated_at;type:datetime(3)" json:"updatedAt"`
	DeletedAt gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);index:idx_chains_deleted_at,priority:1" json:"deletedAt"`
	NodeName  *string        `gorm:"column:node_name;type:varchar(255)" json:"nodeName"`
	IP        *string        `gorm:"column:ip;type:varchar(255)" json:"ip"`
	Port      *int32         `gorm:"column:port;type:int" json:"port"`
	Key       *string        `gorm:"column:key;type:varchar(255)" json:"key"`
	Status    *string        `gorm:"column:status;type:varchar(255);default:8123" json:"status"`
	NodeType  *string        `gorm:"column:node_type;type:varchar(255)" json:"nodeType"`
	Ipv4      *string        `gorm:"column:ipv4;type:varchar(255)" json:"ipv4"`
	Ipv6      *string        `gorm:"column:ipv6;type:varchar(255)" json:"ipv6"`
	Rate      float32        `gorm:"column:rate;type:float;not null;default:1" json:"rate"`
}

// TableName Node's table name
func (*Node) TableName() string {
	return TableNameNode
}
